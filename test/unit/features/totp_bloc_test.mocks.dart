// Mocks generated by Mockito 5.4.6 from annotations
// in totp/test/unit/features/totp_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:totp/src/features/totp_management/models/totp_item.dart' as _i4;
import 'package:totp/src/features/totp_management/totp_manager.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TotpManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTotpManager extends _i1.Mock implements _i2.TotpManager {
  MockTotpManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.TotpItem>> loadTotpItems() =>
      (super.noSuchMethod(
            Invocation.method(#loadTotpItems, []),
            returnValue: _i3.Future<List<_i4.TotpItem>>.value(<_i4.TotpItem>[]),
          )
          as _i3.Future<List<_i4.TotpItem>>);

  @override
  _i3.Future<void> saveTotpItems(List<_i4.TotpItem>? items) =>
      (super.noSuchMethod(
            Invocation.method(#saveTotpItems, [items]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> addTotpItem(_i4.TotpItem? newItem) =>
      (super.noSuchMethod(
            Invocation.method(#addTotpItem, [newItem]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateTotpItem(_i4.TotpItem? updatedItem) =>
      (super.noSuchMethod(
            Invocation.method(#updateTotpItem, [updatedItem]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteTotpItem(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTotpItem, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> doesTotpItemExist(_i4.TotpItem? newItem) =>
      (super.noSuchMethod(
            Invocation.method(#doesTotpItemExist, [newItem]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> migrateEncryptionKeys() =>
      (super.noSuchMethod(
            Invocation.method(#migrateEncryptionKeys, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String> getEncryptionStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getEncryptionStatus, []),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#getEncryptionStatus, []),
              ),
            ),
          )
          as _i3.Future<String>);
}
